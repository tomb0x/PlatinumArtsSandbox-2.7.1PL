
// implements some editing commands

//blendpaintmode
paintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]

//////// Entity Editing ///////////////

// the entity type of current selection
et = [ at (entget) 0 ]

// access the given attribute of selected ent
ea = [ at (entget) (+ $arg1 1) ]

// clear ents of given type
clearents = [
  if $editing [
    entcancel
    entselect [ strcmp (et) $arg1 ];
    echo Deleted (enthavesel) $arg1 entities;
    delent
  ]
]

// replace all ents that match current selection
// with the values given
replaceents = [
	setattrs = ""
	loop i $numargs [
		attrs = (concatword $attrs " ^"" (getalias $arg@(+ 1 $i)) "^"")
	]
	if $editing [
		entfind @(entget)
		entset @attrs
		echo Replaced (enthavesel) entities
	]
]

selentedit      = [ "saycommand" [/entset @(entget) ] ]
selreplaceents  = [ "saycommand" [/replaceents @(entget) ] ]
selentfindall   = [ do [ entfind @(entget) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
	entloop [
		attrs = ""
		num = (getattrnum (et))

		loop i $num [
			tmp = (ea $i)
			if (= @@arg1 $i) [
				tmp = (+ $tmp @@arg2)
			]
			attrs = (concat $attrs $tmp)
		]

		do [entset (et) @attrs]
	]
]

enttypelist = [light mapmodel playerstart envmap particles sound spotlight]

enttypelength = ( listlen $enttypelist )

listindex = [
  s = 0
  n = (listlen $arg1)
  loop i $n [
    if (strcmp $arg2 (at $arg1 $i)) [
      s = $i
    ]
  ]
  result $s
]

enttypeselect = [
  n = $enttypelength
  next = (+ (listindex $enttypelist (et)) $arg1)
  if (< $next 0)  [ next = (- $n 1) ]
  if (= $next $n) [ next = 0 ]
  next = (at $enttypelist $next)
  do [entset $next @(substr (entget) (+ (strlen (et)) 1)) ]
]

////// Entity primary actions /////////

ent_action_mapmodel       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_spotlight      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_light          = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_playerstart    = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_envmap         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particles      = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_sound          = [ entproperty 0 ( * $arg1 1 ) ]


//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entreplace = [
  do [
    if (enthavesel) [] [ newent @entcopybuf ]
    entset @entcopybuf
  ]
]

editcopy = [
  if (|| havesel [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste = [
  cancelpaste = (! (|| enthavesel havesel));
  if (strcmp "" $entcopybuf) [
    pastehilite
    reorient // temp; real fix will be in octaedit
    onrelease [
      if (opaquepaste) delcube
      paste
      entpaste
      if ($cancelpaste) [ cancelsel ]
    ]
  ] [
    entreplace
    if ($cancelpaste) [ cancelsel ]
  ]
]

/////// Selection ///////////////

equaltype = [
  if (strcmp * $arg1) [ result 1 ] [
    result (strcmp (et) $arg1)
  ]
]

equalattr  = [
  if (strcmp * $arg2) [ result 1 ] [
    result (= (ea $arg1) $arg2)
  ]
]

// select ents with given properties
// '*' is wildcard
entfind = [
	if (= $numargs 0) [
		entselect 1
	] [
		num = $numargs
		attrs = $arg2
		loop i (- $num 2) [
			attrs = (concat $attrs $(concatword arg (+ $i 3)))
		]

		entselect [
			match = (equaltype @@arg1)
			loop i (- @num 1) [
				match = (&& $match [equalattr $i (at $attrs $i)])
			]

			result $match
		]
	]
]

selindex = [entselect [(= (entindex) $arg1)]]

lse        = [
  line = ""
  count = 0
  entloop [
    line  = ( concatword $line (entget) "		" )
    count = ( + $count 1 )
    if (> $count 4) [
      echo $line
      line = ""
      count = 0
    ]
  ]
  if (> $count 0 ) [ echo $line ]
  echo (enthavesel) entities selected
]

enttoggle  = [ entmoving 1; entmoving 0; ]
entaddmove = [ entmoving 2 ]

grabbing = 0

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
entadd     = [ entaddmove; entmoving 0; ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entaddmove; onrelease [entmoving 0]; result $entmoving ]
editdrag   = [ cancelsel; || (entdrag) [ drag ] ]
selcorners = [ if ($hmapedit) [ hmapselect ] [ cancelsel; || (entdrag) [ corners ] ] ]
editextend = [ || entdrag [ selextend; reorient; editmove ] ]

editmovewith    = [
  if (havesel) [
    || (editmove) [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [

  if (|| [havesel] [! (enthavesel)] ) [
    if ($moving) [
      pushsel $arg1
    ] [
      entcancel
      editface $arg1 $arg2
    ]
  ] [
      if ($entmoving) [ entpush $arg1 ] [ ent_action_@(et) ]
  ]
]

entswithdirection = "playerstart teledest mapmodel creature box barrel platform elevator"

inlist = [
  r = 0
  n = ( listlen $arg2 )
  loop i $n [
    if (strcmp $arg1 (at $arg2 $i)) [
      r = 1
    ]
  ]
  result $r
]

entdirection = [
  if ( && (enthavesel) [ = (havesel) 0 ] ) [
    if (inlist (et) $entswithdirection) [
      if (> $arg1 0) [
        entproperty 0 @@arg2
        if (> (ea 0) 360) [ entproperty 0 -360 ]
      ] [
        entproperty 0 -@@arg2
        if (< (ea 0) 0) [ entproperty 0 360 ]
      ]
    ]
    result 1
  ] [
    result 0
  ]
]

editdel    = [ delcube; delent ]
editflip   = [ flip; entflip ]

editrotate = [
  || [ entdirection $arg1 15 ] [
      rotate $arg1
      entrotate $arg1
    ]
]

editcut    = [
  hadselection = (havesel)
  moving 1
  if ($moving) [
    copy;     entcopy
    delcube;  delent
    onrelease [
      moving 0
      paste
      entpaste
      if ( ! $hadselection ) [ cancelsel ]
    ]
  ]
]

passthrough = [
  passthroughsel $arg1;
  if ($arg1) [
    passthroughcube_bak = $passthroughcube
    passthroughcube 1
  ] [
    passthroughcube $passthroughcube_bak
  ]
  entcancel
  if ( setting_entediting ) [ entediting ( ! $arg1 ) ]

]

parts = ["flame + smoke" "flame" "smoke plume" smoke fountain fireball bar "versus bar" text  flare lightning fire smoke water snow leaves]

genenthudmapmodel = [
	if (< (ea 1) 0) [entname = "invisible"] [
		if (strcmp (mapmodelname (ea 1)) "") [ entname = "^f3Invalid!" ] [
			entname = (mapmodelname (ea 1))
		]
	]
	format "model: ^f0%1" $entname
]

genenthudparticles = [
	if (&& (>= (ea 0) 0) (<= (ea 0) 15)) [
		entname = (at $parts (ea 0))
	] [
		if (&& (> (ea 0) 31) (< (ea 0) 36)) [
			entname = "lensflare"
		] [
			entname = "unknown"
		]
	]

	if (|| (&& (>= (ea 0) 0) (<= (ea 0) 3)) (&& (>= (ea 0) 9) (<= (ea 0) 15))) [
		setcollevels col (ea 3)
		format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
	] [
		if (&& (>= (ea 0) 5) (<= (ea 0) 8)) [
			setcollevels col (ea 2)
			format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
		] [
			if (&& (> (ea 0) 31) (< (ea 0) 36)) [
				format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname (ea 1) (ea 2) (ea 3)
			] [
				format "%1 particles" $entname
			]
		]
	]
]

genenthudplayerstart = [
	concat "Yaw:" (ea 0)
]

genenthudlight = [
	if (= (ea 0) 0) [
		entname = "^f0infinity^f7"
	] [
		if (< (ea 0) 0) [
			entname = "^f3Invalid!^f7"
		] [
			entname = (format "^f0%1^f7" (ea 0))
		]
	]
	loop i 3 [
		if (< (ea (+ 1 $i)) 0) [
			entname = (format "%1 %2" $entname (concatword "^f4" (ea (+ 1 $i))))
		] [
			entname = (format "%1 %2" $entname (ea (+ 1 $i)))
		]
	]
	if (strcmp (et) "dynlight") [
		if (< (ea 4) 0) [
			format "^f3Invalid tag! 0must be 0 or above"
		] [
			format "radius: %1; RGB: ^f3%2 ^f0%3 ^f1%4 ^f7tag: ^f0%5" (at $entname 0) (at $entname 1) (at $entname 2) (at $entname 3) (ea 4)
		]
	] [
		format "radius: %1; RGB: ^f3%2 ^f0%3 ^f1%4" (at $entname 0) (at $entname 1) (at $entname 2) (at $entname 3)
	]
]

genenthudsound = [
	if (< (ea 0) 0) [
		entname = "^f3Invalid!"
	] [
		if (strcmp (entsoundname (ea 0)) "") [
			entname = "^f3Unregistered index"
		] [
			entname = (entsoundname (ea 0))
		]
	]
	format "soundfile: ^f0%1" $entname
]

genenthudspotlight = [
	format "angle: %1" (min 90 (max 0 (ea 0)))
]

genenthudenvmap = [
	radius = (ea 0)
	if (! $radius) [radius = $envmapradius]
	format "radius: %1" $radius
]

genenthud = [
	if (strcmp (getalias (concatword "genenthud" (et))) "") [
		result "No Information"
	] [
		result ((concatword "genenthud" (et)))
	]
]

edithud = [
	cond [!= $hmapedit 0] [
		format "^f0rozmiar kratki: %3 rozmiar planszy: %4^npędzel: %1: %2" $brushindex $brushname $gridpower $mapscale
	] [!= $blendpaintmode 0] [
		format "^f0pAiNtMoDe %1: %2^npędzel %3: %4" $blendpaintmode (at $paintmodes $blendpaintmode) (curblendbrush) (getblendbrushname (curblendbrush))
	] [enthavesel] [
		format "^f0%1^n%2" (concatword (entget) " : [" (enthavesel) " zaznaczone]") (genenthud)
	] [|| (strcmp (gettexname (getseltex) 0) (gettexname 0 0)) (strcmp (getseltex) "")] [
		format "^f0rozmiar kratki: %1 rozmiar planszy: %2" $gridpower $mapscale
	] [ 1 ] [
		format "^f0rozmiar kratki: %1 rozmiar planszy: %3^ntekstura numer %4: %2" $gridpower (gettexname (getseltex) 0) $mapscale (getseltex)
	]
]

VARoutlinestatus = 0

//default blend brushes
addblendbrush circle_16_soft   packages/brushes/circle_16_soft.png
addblendbrush circle_16_hard   packages/brushes/circle_16_hard.png
addblendbrush circle_16_solid  packages/brushes/circle_16_solid.png
addblendbrush circle_32_soft   packages/brushes/circle_32_soft.png
addblendbrush circle_32_hard   packages/brushes/circle_32_hard.png
addblendbrush circle_32_solid  packages/brushes/circle_32_solid.png
addblendbrush circle_64_soft   packages/brushes/circle_64_soft.png
addblendbrush circle_64_hard   packages/brushes/circle_64_hard.png
addblendbrush circle_64_solid  packages/brushes/circle_64_solid.png
addblendbrush circle_128_soft  packages/brushes/circle_128_soft.png
addblendbrush circle_128_hard  packages/brushes/circle_128_hard.png
addblendbrush circle_128_solid packages/brushes/circle_128_solid.png

addblendbrush square_16_hard  packages/brushes/square_16_hard.png
addblendbrush square_16_solid packages/brushes/square_16_solid.png
addblendbrush square_32_hard  packages/brushes/square_32_hard.png
addblendbrush square_32_solid packages/brushes/square_32_solid.png
addblendbrush square_64_hard  packages/brushes/square_64_hard.png
addblendbrush square_64_solid packages/brushes/square_64_solid.png

addblendbrush noise_64  packages/brushes/noise_64.png
addblendbrush noise_128 packages/brushes/noise_128.png

//extra shapes and um... stuff
addblendbrush star_32_hard  packages/brushes/star_32_hard.png
addblendbrush star_32_solid packages/brushes/star_32_solid.png
addblendbrush star_64_hard  packages/brushes/star_64_hard.png
addblendbrush star_64_solid packages/brushes/star_64_solid.png

addblendbrush triangle_32_hard  packages/brushes/triangle_32_hard.png
addblendbrush triangle_32_solid packages/brushes/triangle_32_solid.png
addblendbrush triangle_64_hard  packages/brushes/triangle_64_hard.png
addblendbrush triangle_64_solid packages/brushes/triangle_64_solid.png

getsundir = [sunlightyaw (getcamyaw); sunlightpitch (getcampitch)]
